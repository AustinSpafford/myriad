// We must identify the kernal (entry-point) functions.
#pragma kernel compute_shader_main

struct s_orbiter_state
{
	float3 position;
	float3 velocity;
};

RWStructuredBuffer<s_orbiter_state> u_inout_orbiters;
float3 u_attractor_local_position;
float u_attractor_unitized_gravity; // The resulting acceleration at a distance of 1 meter.
float u_max_velocity_as_escape_velocity_fraction; // https://en.wikipedia.org/wiki/Escape_velocity
float u_delta_time;

[numthreads(64, 1, 1)]
void compute_shader_main (uint3 thread_id : SV_DispatchThreadID)
{
	float3 position_step = (u_delta_time * u_inout_orbiters[thread_id.x].velocity);

	u_inout_orbiters[thread_id.x].position += position_step;
}
